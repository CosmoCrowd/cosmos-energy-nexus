
import { Button } from '@/components/ui/button';
import { useWallet } from '@/context/WalletContext';

const energyLevels = [
  { id: 1, name: '–≠–Ω–µ—Ä–≥–∏—è –ù–∞—á–∞–ª–∞', price: 0.5, emoji: '‚ö°' },
  { id: 2, name: '–≠–Ω–µ—Ä–≥–∏—è –ü—É–ª—å—Å–∞', price: 1, emoji: 'üî•' },
  { id: 3, name: '–≠–Ω–µ—Ä–≥–∏—è –í–æ–ª–Ω—ã', price: 2, emoji: 'üåä' },
  { id: 4, name: '–≠–Ω–µ—Ä–≥–∏—è –ü–æ—Ç–æ–∫–∞', price: 4, emoji: 'üí´' },
  { id: 5, name: '–≠–Ω–µ—Ä–≥–∏—è –í–∑—Ä—ã–≤–∞', price: 8, emoji: 'üí•' },
  { id: 6, name: '–≠–Ω–µ—Ä–≥–∏—è –°—Ñ–µ—Ä—ã', price: 16, emoji: 'üîÆ' },
  { id: 7, name: '–≠–Ω–µ—Ä–≥–∏—è –ö—Ä–∏—Å—Ç–∞–ª–ª–∞', price: 32, emoji: 'üíé' },
  { id: 8, name: '–≠–Ω–µ—Ä–≥–∏—è –ü–ª–∞–∑–º—ã', price: 64, emoji: '‚ö°' },
  { id: 9, name: '–≠–Ω–µ—Ä–≥–∏—è –Ø–¥—Ä–∞', price: 128, emoji: '‚ò¢Ô∏è' },
  { id: 10, name: '–≠–Ω–µ—Ä–≥–∏—è –ö–æ—Å–º–æ—Å–∞', price: 256, emoji: 'üåå' },
];

interface EnergyMatrixProps {
  onLevelPurchase: (level: number) => void;
}

const EnergyMatrix = ({ onLevelPurchase }: EnergyMatrixProps) => {
  const { userLevel } = useWallet();

  return (
    <div className="cosmic-card p-4 animate-fade-in-up" style={{animationDelay: '0.2s'}}>
      <div className="flex items-center space-x-2 mb-4">
        <div className="w-2 h-2 bg-neon-green rounded-full animate-pulse"></div>
        <h3 className="text-white font-semibold">–ú–∞—Ç—Ä–∏—Ü–∞ –≠–Ω–µ—Ä–≥–∏–π</h3>
        <div className="w-2 h-2 bg-neon-green rounded-full animate-pulse" style={{animationDelay: '0.5s'}}></div>
      </div>
      
      <div className="grid grid-cols-2 gap-3">
        {energyLevels.map((level, index) => (
          <Button
            key={level.id}
            onClick={() => onLevelPurchase(level.id)}
            disabled={level.id <= userLevel}
            className={`p-4 rounded-xl border transition-all duration-300 transform hover:scale-105 animate-fade-in-up ${
              level.id <= userLevel
                ? 'bg-neon-green/20 border-neon-green text-white shadow-lg shadow-neon-green/20'
                : 'bg-cosmic-gray/50 border-gray-600 text-gray-300 hover:border-neon-blue hover:bg-cosmic-light/30 hover:shadow-lg hover:shadow-neon-blue/20'
            }`}
            style={{animationDelay: `${0.3 + index * 0.05}s`}}
          >
            <div className="text-center space-y-2">
              <div className={`text-2xl ${level.id <= userLevel ? 'animate-bounce' : ''}`}>
                {level.emoji}
              </div>
              <div className="font-medium text-xs leading-tight">{level.name}</div>
              <div className="font-bold text-sm">{level.price} TON</div>
              {level.id <= userLevel && (
                <div className="text-xs text-neon-green animate-pulse">‚úì –ê–∫—Ç–∏–≤–Ω–æ</div>
              )}
            </div>
          </Button>
        ))}
      </div>
    </div>
  );
};

export { energyLevels };
export default EnergyMatrix;
